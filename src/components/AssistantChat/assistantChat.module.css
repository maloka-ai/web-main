.wrapper {
  position: relative;
  height: 100%;
  width: 25%;
  transition: ease-in-out all 0.8s;
  padding-top: 40px;
}

.wrapper-expanded {
  width: 60%;
}

.header{
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 1rem;
}

.chatContainer {
  display: flex;
  flex-direction: column;
  min-height: 600px;
  min-width: 260px;
  height: 100%;
  background-color: #f4f3ed;
  border-radius: 12px 12px 0 0;
  border: solid 1px #c8c4b4;
  padding: 1rem;
  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.05);
  overflow: hidden;
}

.headerTitle {
  font-size: 1.1rem;
  color: #4b4b4b;
}

.messageArea {
  flex: 1;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  margin: 0 10px 3.5px 1px;
  padding: 10.5px 5px 5px 11px;
  border-radius: 7.5px;
}

.userMsg {
  align-self: flex-end;
  background-color: #fefefe;
  border-radius: 12px;
  padding: 0.6rem 0.9rem;
  font-size: 0.95rem;
  max-width: 80%;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.06);
  border: 1px solid #eee;
}

.botMsg {
  align-self: flex-start;
  border-radius: 12px;
  padding: 0.6rem 0.9rem;
  font-size: 0.95rem;
  max-width: 80%;
}

.inputArea {
  display: flex;
  gap: 0.5rem;
  padding-top: 0.75rem;
  border-top: 1px solid #e3e3e3;
  background-color: #f4f3ed;

  & .MuiInputBase-root{
    border: none;
    box-shadow: none;

    & textarea{
      background-color: #fff !important;
    }
  }
}
.inputWrapper {
  width: 100%;
}

.inputSelector {
  position: relative;
  width: 240px;
  margin: -46px 8px 8px 8px;
  z-index: 2;
}

.sendButton {
  background-color: #df8157 !important;
  color: #4b4b4b !important;
  border-radius: 10px !important;
  padding: 0.5rem !important;
  transition: background-color 0.2s ease;
}

.sendButton:hover {
  background-color: #eb9b76 !important;
}

.drawerOverlay {
  position: absolute;
  top: 40px;
  left: 0;
  width: 80%;
  max-width: 300px;
  height: 100%;
  z-index: 10;
  display: flex;
  flex-direction: row;
}

.drawer {
  width: 95%;
  background-color: #f9f8f4;
  box-shadow: 2px 0 6px rgba(0, 0, 0, 0.1);
  height: 100%;
  z-index: 1201;
  position: relative;
  border-radius: 12px 0 0 12px;
}

.drawerHeader{
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: 1rem;;
}

.drawerTitle {
  color: #4b4b4b;
  font-size: 1.1rem;
}

.drawerBackdrop {
  flex: 1;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: transparent;
  z-index: 1200;
}

.conversationItem {
  display: flex;
  align-items: center;
  font-size: 0.95rem;
  padding: 0.5rem;
  cursor: pointer;
  transition: background-color 0.2s ease;
  overflow: hidden;

  & span {
    display: inline-block;
    white-space: nowrap;
    transition: transform 0.3s ease;
  }

  & span:hover {
    animation: scroll-text 3s linear forwards;
  }

  &:hover {
    background-color: #e3e3e3;
  }
}
.conversationItem.active {
  background-color: #df8157;
  color: #fff;
}
.conversationItem.active:hover {
  background-color: #eb9b76;
}
.conversationName {
  font-size: 0.95rem;
  color: #4b4b4b;
  margin-left: 0.5rem;
}

@keyframes scroll-text {
  0%   { transform: translateX(0); }
  100% { transform: translateX(calc(-100% + 200px)); }
}

.toggleButton {
  position: absolute;
  top: 50%;
  right: -20px;
  transform: translateY(-50%);
  background-color: #c8c4b4;
  color: #fff;
  border-radius: 0 12px 12px 0;
  width: 20px;
  height: 120px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  z-index: 1202;
}
.toggleButton:hover {
  background-color: #cfccc1;
}


/* cursor piscando (opcional) */
.cursorBlink {
  display: inline-block;
  margin-left: 2px;
  animation: blink 1s steps(1) infinite;
}
@keyframes blink {
  50% { opacity: 0; }
}

/* “... ” animado usando steps + width */
.typingDots::after {
  content: '...';
  display: inline-block;
  overflow: hidden;
  width: 0ch;                 /* começa sem pontos */
  vertical-align: bottom;
  animation: dots 1.2s steps(4, end) infinite;
}

/* Vai de 0 → 3 caracteres e volta pro início automaticamente (loop) */
@keyframes dots {
  0%   { width: 0ch; }
  100% { width: 3ch; }
}

.typingContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 4px;
  height: 32px;
}
/*ANIMAÇÃO PARA BOTÃO ENQUANTO ESPERA RESPOSTA*/
.singleDot {
  display: inline-block;
  width: 10px;     /* tamanho do círculo */
  height: 10px;
  border-radius: 50%;
  background-color: #fff; /* branco */
  animation: pulse 1s infinite ease-in-out;
}


.containerSingleDot {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
}

@keyframes pulse {
  0%, 100% {
    transform: scale(0.7);
    opacity: 0.4;
  }
  50% {
    transform: scale(1);
    opacity: 1;
  }
}