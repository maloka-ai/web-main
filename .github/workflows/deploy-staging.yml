name: Build & Deploy em Homologação

on:
  push:
    branches:
      - 'staging'
      - 'bugfix/**'

env:
  DOCKER_REGISTRY: ghcr.io/maloka-ai
  PROJECT_NAME: web-main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Definir tag staging (data+hora)
        id: version
        run: |
          DATE=$(TZ=America/Manaus date +"%d%m%Y-%H%M")
          STAGING_TAG="staging-${DATE}"
          echo "STAGING_TAG=$STAGING_TAG" >> $GITHUB_ENV
          echo "staging_tag=$STAGING_TAG" >> $GITHUB_OUTPUT

      - name: Login no Docker GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build e Push da imagem Docker Next.js (.env.test)
        run: |
          IMAGE="${{ env.DOCKER_REGISTRY }}/${{ env.PROJECT_NAME }}:$STAGING_TAG"
          echo "Building image $IMAGE"
          docker build --build-arg ENV_FILE=.env.test --no-cache -t $IMAGE .
          docker push $IMAGE

      - name: Clonar repositório de manifests
        uses: actions/checkout@v4
        with:
          repository: maloka-ai/gitops
          token: ${{ secrets.GHCR_TOKEN }}
          path: manifests

      - name: Atualizar tag da imagem no deploy.yaml de homologação
        run: |
            cd manifests
            sed -i "s|^\(\s*image:\s*ghcr.io/maloka-ai/web-main:\).*|\1$STAGING_TAG|" web-main/homolog/deploy.yaml
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git add web-main/homolog/deploy.yaml
            if ! git diff --cached --quiet; then
            git commit -m "Atualiza web-main para $STAGING_TAG em homologação"
            git push
            else
            echo "Nenhuma alteração para commit/push."
            fi
        if: success()

  auto-merge-main:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/bugfix/')
    steps:
      - name: Checar repositório
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GHCR_TOKEN }}

      - name: Mesclar bugfix em main
        run: |
          git fetch origin main
          git checkout main
          git pull origin main
          git merge --no-ff $GITHUB_REF_NAME -m "Merge automático de bugfix $GITHUB_REF_NAME em main"
          git push origin main