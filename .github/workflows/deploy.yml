name: Deploy para EC2

on:
  push:
    branches:
      - main

env:
  NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Instalar dependências
        run: yarn install

      - name: Buildar aplicação
        run: yarn build --no-lint

      - name: Preparar artefato
        run: |
          mkdir -p release
          cp -r .next public package.json yarn.lock release/
          # Copia next.config.js apenas se existir
          [ -f next.config.js ] && cp next.config.js release/
          cd release
          tar -czf ../web-main.tar.gz .
          cd ..

      - name: Copiar artefato para EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "web-main.tar.gz"
          target: "/home/ubuntu/"

      - name: Deploy na EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            APP_DIR="/home/ubuntu/web-main"
            mkdir -p "$APP_DIR"
            tar -xzf /home/ubuntu/web-main.tar.gz -C "$APP_DIR"
            cd "$APP_DIR"
            # Reinicia o app com PM2
            pm2 delete web-main || true
            pm2 start "yarn start" --name web-main
            pm2 save
            pm2 list
