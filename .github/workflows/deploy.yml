name: Deploy para EC2

on:
  push:
    branches:
      - main
env:
  NEXT_PUBLIC_API_URL: $fl secrets.NEXT_PUBLIC_API_URL }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout do código
      - name: Checkout do código
        uses: actions/checkout@v4

      # 2️⃣ Configurar Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      # 3️⃣ Instalar dependências e buildar
      - name: Instalar dependências e buildar
        run: |
          yarn install
          yarn build --no-lint

      # 4️⃣ Preparar artefato para deploy
      - name: Preparar artefato
        run: |
          mkdir -p release
          # Copiar build e arquivos necessários
          cp -r .next public package.json yarn.lock next.config.ts release/ 2>/dev/null || true
          # Incluir a pasta src/app do App Router
          [ -d src/app ] && cp -r src/app release/app
          cd release
          tar -czf ../web-main.tar.gz .
          cd ..

      # 5️⃣ Copiar artefato para EC2
      - name: Copiar artefato para EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "web-main.tar.gz"
          target: "/home/ubuntu/"

      # 6️⃣ Deploy na EC2
      - name: Deploy na EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            APP_DIR="/home/ubuntu/web-main"
            mkdir -p "$APP_DIR"
            rm -rf "$APP_DIR"/*
            tar -xzf /home/ubuntu/web-main.tar.gz -C "$APP_DIR"
            cd "$APP_DIR"

            echo "Instalando apenas dependências de produção com Yarn 3+..."
            yarn workspaces focus --production || yarn install --immutable --check-cache

            echo "Limpando PM2 e portas antigas..."
            pm2 delete web-main || true

            # Certificar que nenhuma aplicação antiga está na porta 3000
            fuser -k 3000/tcp || true

            echo "Iniciando aplicação com PM2..."
            pm2 start "yarn start" --name web-main
            pm2 save
            pm2 list
